{"version":3,"sources":["components/PhotoDisplay.js","components/MapComponent.js","App.js","serviceWorker.js","index.js"],"names":["PhotoDisplay","_ref","url","title","date","react_default","a","createElement","className","src","alt","moment","parseInt","format","MapComponent","props","Map","center","zoom","TileLayer","attribution","markers","map","marker","latitude","position","id","myIcon","L","divIcon","html","concat","Marker","icon","key","showMarker","longitude","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchPhotos","photoList","arguments","length","undefined","state","photos","page","licenseList","setState","error","loading","axios","get","filterMinDateUnix","filterMaxDateUnix","then","result","data","photo","newPhoto","dateupload","description","_content","url_q","toConsumableArray","total","isEnd","pages","catch","console","log","licenseChange","selectedItems","filterMinDate","unix","filterMaxDate","options","value","label","bind","assertThisInitialized","changeMinDate","changeMaxDate","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","licenses","license","push","join","minDateUnix","maxDateUnix","_this$state","es","selected","onChange","react_select_esm","isMulti","components_MapComponent","components_PhotoDisplay","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da1563e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst PhotoDisplay = ({url, title, date}) => {\r\n    \r\n        return (\r\n            <div className=\"column is-4-mobile  is-4-tablet is-2-desktop photo-card\">\r\n                <img src={url} alt={title} />\r\n                <span className=\"photo-title\">{title}</span>          \r\n                <span className=\"photo-date\">{moment(parseInt(date)*1000).format(\"DD MMM YYYY hh:mm a\")}</span>      \r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default PhotoDisplay;","import React from 'react';\r\nimport L from \"leaflet\";\r\nimport { Map, Marker, TileLayer } from 'react-leaflet';\r\n\r\nconst MapComponent = (props) => {\r\n    const showMarker = (position, url, id) => {\r\n        const myIcon = L.divIcon({html: `<img src='${url}' class='map-thumbnail' />`}); //create new marker with dog photo instead of icon\r\n        return (\r\n            <Marker position={position} icon={myIcon} key={id}>\r\n            </Marker>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Map center={[25, -30.09]} zoom={1} > \r\n        <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n        />          \r\n        { props.markers.map((marker) => { //loop through markers and check if they have latitudes\r\n            if( marker.latitude !== 0 ){\r\n                return showMarker([marker.latitude, marker.longitude], marker.url, marker.id);\r\n            } else { \r\n                return false; \r\n            }\r\n        }) }                   \r\n        </Map>\r\n    );\r\n\r\n}\r\n\r\nexport default MapComponent;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport Select from 'react-select';\n\nimport PhotoDisplay from './components/PhotoDisplay';\nimport MapComponent from './components/MapComponent';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      photos: [],\n      isEnd: false,\n      loading: false,\n      page: 1,\n      filterMinDate: moment(\"01/01/2000\"),\n      filterMinDateUnix: moment(\"01/01/2000\").unix(),\n      filterMaxDate: moment(),\n      filterMaxDateUnix: moment().unix(),\n      error: '',\n      options: [\n        { value: '0', label: '1: All Rights Reserved' },\n        { value: '1', label: '2: Attribution-NonCommercial-ShareAlike License' },\n        { value: '2', label: '3: Attribution-NonCommercial License' },\n        { value: '3', label: '4: Attribution-NonCommercial-NoDerivs License' },\n        { value: '4', label: '5: Attribution License' },\n        { value: '5', label: '6: Attribution-ShareAlike License' },\n        { value: '6', label: '7: Attribution-NoDerivs License' },\n        { value: '7', label: '8: No known copyright restrictions' },\n        { value: '8', label: '9: United States Government Work' },\n        { value: '9', label: '10: Public Domain Dedication (CC0)' },\n        { value: '10', label: '11: Public Domain Mark' }\n      ],\n      selectedItems: [\n        { value: '0', label: '1: All Rights Reserved' },\n        { value: '1', label: '2: Attribution-NonCommercial-ShareAlike License' },\n        { value: '2', label: '3: Attribution-NonCommercial License' },\n        { value: '3', label: '4: Attribution-NonCommercial-NoDerivs License' },\n        { value: '4', label: '5: Attribution License' },\n        { value: '5', label: '6: Attribution-ShareAlike License' },\n        { value: '6', label: '7: Attribution-NoDerivs License' },\n        { value: '7', label: '8: No known copyright restrictions' },\n        { value: '8', label: '9: United States Government Work' },\n        { value: '9', label: '10: Public Domain Dedication (CC0)' },\n        { value: '10', label: '11: Public Domain Mark' }\n      ]\n    }\n\n    this.searchPhotos = this.searchPhotos.bind(this);\n    this.changeMinDate = this.changeMinDate.bind(this);\n    this.changeMaxDate = this.changeMaxDate.bind(this);\n\n    //infinite scroll\n    window.onscroll = () => { \n      if ( window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight ) {\n        this.searchPhotos();\n      } \n    }\n  }\n\n  componentDidMount(){\n    this.searchPhotos();\n  }\n\n  searchPhotos = (photoList = this.state.photos, page = this.state.page) => { //by default photoList is state, for infinite scroll, but after change the filter, we reset it by providing empty array, by default page is from state, but we can pass 0 to start from first page after change in filters\n    const licenseList = this.licenseList();\n    if(licenseList === false){\n      this.setState({ \n        error: 'No license selected!',\n        photos: [],\n        page: 1 \n      }); //if returned false, then show error\n    } else {\n      this.setState({ loading: true, error: '' }, () => {\n\n        axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=06f4e4b9f08bbf02355e3c11fc871923&text=dogs&format=json&nojsoncallback=1&per_page=100&extras=description,date_upload,owner_name,geo,url_q,license&page=${this.state.page}&min_upload_date=${this.state.filterMinDateUnix}&max_upload_date=${this.state.filterMaxDateUnix}&license=${licenseList}`)\n        .then((result) => {\n\n          result.data.photos.photo.map((photo) => {\n            const newPhoto = {\n              id: photo.id,\n              date: photo.dateupload,\n              title: photo.title,\n              description: photo.description._content,\n              latitude: photo.latitude,\n              longitude: photo.longitude,\n              url: photo.url_q\n            };\n            return photoList = [ ...photoList, newPhoto]; //return updated list of photos\n            \n          });          \n\n          if(result.data.photos.total === \"0\") { //if no photos found, then show error\n            this.setState({ \n              photos: photoList,\n              isEnd: false,\n              loading: false, \n              error: 'Photos not found!',\n              page: 1 \n            });\n          }\n          else if(result.data.photos.page === result.data.photos.pages) { //if it's last page\n            this.setState({\n              photos: photoList,\n              isEnd: true,\n              loading: false, \n              error: 'All photos loaded!',\n              page: page+1 //next page to load\n            });\n          } \n          else {\n            this.setState({\n              photos: photoList,\n              loading: false, \n              error: '',\n              page: page+1 //next page to load\n            });\n\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.setState({\n            photos: [],\n            loading:false,\n            error: error,\n            page:1\n          });\n        });\n      });\n    }\n  }\n\n  //list of license as string\n  licenseList() {\n    const licenses = []; //list of license selected \n    if(this.state.selectedItems.length === 0) { \n      return false; //if no license selected, then return false\n    }\n    this.state.selectedItems.map(\n      license => licenses.push(license.value) //insert license ID to array \n    );    \n    return licenses.join(); //convert array to string\n  }\n\n  /*\n   * Filters\n   */\n\n  //Change min. date\n  changeMinDate(date) {\n    const minDateUnix = moment(date).unix(); //convert date to unix format\n    this.setState({\n      photos: [],\n      page: 1,\n      filterMinDate: date,\n      filterMinDateUnix: minDateUnix,\n      error: ''\n    });\n    this.searchPhotos([], 0); //search photos, delete previous photos, reset page\n  }\n\n  //Change max. date\n  changeMaxDate(date) {\n    const maxDateUnix = moment(date).unix(); //convert date to unix format\n    this.setState({\n      photos: [],\n      page: 1,\n      filterMaxDate: date,\n      filterMaxDateUnix: maxDateUnix,\n      error: ''\n    });\n    this.searchPhotos([], 0); //search photos, delete previous photos, reset page\n  }\n\n  //Change licenses\n  licenseChange = (selectedItems) => {\n    this.setState({ selectedItems }, () => { this.searchPhotos([], 0) }); //after setState is finished, delete previous photos\n  }\n\n  render() {\n    const { loading, filterMinDate, filterMaxDate, selectedItems, error, options } = this.state;\n    /* const options = [\n      { value: '0', label: '1: All Rights Reserved' },\n      { value: '1', label: '2: Attribution-NonCommercial-ShareAlike License' },\n      { value: '2', label: '3: Attribution-NonCommercial License' },\n      { value: '3', label: '4: Attribution-NonCommercial-NoDerivs License' },\n      { value: '4', label: '5: Attribution License' },\n      { value: '5', label: '6: Attribution-ShareAlike License' },\n      { value: '6', label: '7: Attribution-NoDerivs License' },\n      { value: '7', label: '8: No known copyright restrictions' },\n      { value: '8', label: '9: United States Government Work' },\n      { value: '9', label: '10: Public Domain Dedication (CC0)' },\n      { value: '10', label: '11: Public Domain Mark' }\n    ]; */\n    return (     \n        <section className=\"section\">\n          <div className=\"columns is-multiline\">\n          <div className=\"column is-2\">\n            <label>From date:\n              <DatePicker\n                selected={filterMinDate}\n                onChange={this.changeMinDate}\n              />\n            </label>\n          </div>\n          <div className=\"column is-2\">\n            <label>To date:\n              <DatePicker\n                selected={filterMaxDate}\n                onChange={this.changeMaxDate}\n              />\n            </label>\n          </div>\n          <div className=\"column is-8\">\n            <label>License:\n              <Select \n                value={selectedItems} \n                options={options} \n                isMulti={true} \n                onChange={this.licenseChange}\n              />\n            </label>\n          </div>\n          <div className=\"column is-4\">\n              <div className=\"mapcontainer\">\n                <MapComponent markers={this.state.photos} />\n              </div>\n          </div>\n          <div className=\"column is-8 columns is-multiline is-mobile photo-container\">\n            { this.state.photos.map((photo) => {\n              return <PhotoDisplay key={photo.id}  id={photo.id} url={photo.url} title={photo.title} date={photo.date}/>               \n            }) }\n            { loading ? <div className=\"loading\">Loading...</div> : <div className=\"error\">{ error }</div> }\n            \n          </div>\n        </div>\n      </section>        \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}